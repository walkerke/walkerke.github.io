<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KYLE WALKER DATA</title>
    <link>/tags/plotly/index.xml</link>
    <description>Recent content on KYLE WALKER DATA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kwalkerdata@gmail.com (Kyle Walker)</managingEditor>
    <webMaster>kwalkerdata@gmail.com (Kyle Walker)</webMaster>
    <copyright>(c) 2017 Kyle Walker</copyright>
    <atom:link href="/tags/plotly/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Visualizing the economics of tourism in the Pacific with Plotly</title>
      <link>/2014/05/tourism-plotly/</link>
      <pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate>
      <author>kwalkerdata@gmail.com (Kyle Walker)</author>
      <guid>/2014/05/tourism-plotly/</guid>
      <description>&lt;p&gt;Over the last month or so, I&amp;rsquo;ve been working a lot with &lt;a href=&#34;http://plot.ly&#34;&gt;Plotly&lt;/a&gt; to visualize data for my World Regional Geography course.  Plotly is a web-based service that allows for the creation of interactive, D3-based visualizations that can be easily shared.  Visualizations are deployed and hosted on Plotly&amp;rsquo;s servers, so the service requires a connection to the internet to work.  One of the great things about Plotly is that it has APIs for popular data programming languages like &lt;a href=&#34;http://plot.ly/r/&#34;&gt;R&lt;/a&gt;, &lt;a href=&#34;http://plot.ly/python/&#34;&gt;Python&lt;/a&gt;, and &lt;a href=&#34;http://plot.ly/julia/&#34;&gt;Julia&lt;/a&gt;.  I really got hooked on Plotly, however, when I learned about &lt;code&gt;ggplotly&lt;/code&gt;, &lt;a href=&#34;http://ropensci.org/blog/2014/04/17/plotly/&#34;&gt;which allows you to convert &lt;strong&gt;ggplot2&lt;/strong&gt; graphs in R to interactive Plotly charts with just a couple extra lines of code&lt;/a&gt;.   I&amp;rsquo;m going to go over an example of how I used &lt;code&gt;ggplotly&lt;/code&gt; to assist with a discussion of the economic significance of tourism in the Pacific.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In my final class of the semester, I focused on Oceania (defined as Australia, New Zealand, and Pacific Island nations).  In this class, I wanted to show students how small, relatively isolated countries in the Pacific can be acutely affected by larger global forces.  We focused on topics such as trash accumulation in the Pacific, sea level rise due to climate change, and the ways in which island countries are connected to the global economy.  As part of this, we discussed the role of tourism in Pacific Island economies.  To help illustrate this to my students, I sought out data on the tourist economies of these countries, which is freely available from the &lt;a href=&#34;http://www.wttc.org/research/economic-data-search-tool/&#34;&gt;World Travel &amp;amp; Tourism Council&amp;rsquo;s Economic Data Search Tool&lt;/a&gt;.  To download the data, I followed these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For Step 1 of the search tool, I clicked &lt;strong&gt;Countries &amp;gt; Oceania&lt;/strong&gt;, then selected Fiji, Kiribati, Other Oceania, Solomon Islands, Tonga, and Vanuatu.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;For Step 2, I selected &amp;ldquo;Travel &amp;amp; Tourism Total Contribution to GDP.&amp;rdquo;  These figures include both tourism&amp;rsquo;s direct contributions to GDP (e.g. GDP generated by hotels, airlines, etc.) and its indirect contributions to the economy; &lt;a href=&#34;http://www.wttc.org/site_media/uploads/downloads/oceania2014.pdf&#34;&gt;see this report for more details&lt;/a&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;For Step 3, I selected &amp;ldquo;% share&amp;rdquo; as my unit, as I was interested in the extent to which tourism figures in the overall constitution of these countries&amp;rsquo; economies.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;I chose the entire date range from 1988 to 2024 (projected), and clicked &lt;strong&gt;Submit&lt;/strong&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The data can then be downloaded as an Excel file.  However, the Excel file is formatted in a way that resembles the HTML on the web page, and as such is not in the &amp;ldquo;tidy&amp;rdquo; format that is required for visualization in ggplot2.  As such, I saved the file as a CSV (which is available from my GitHub repository) and imported the data into R for some cleaning.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The R code below shows one way to clean up data downloaded from the WTTC in this particular format (multiple countries, one variable).  I&amp;rsquo;ve written a function, &lt;code&gt;tidy_WTTC&lt;/code&gt;, that should work for any dataset in this form available from the WTTC.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Load packages and data

library(reshape2)
library(ggplot2)
library(plotly)
library(zoo)

dat &amp;lt;- read.csv(&#39;tourism.csv&#39;)

## Define the &amp;quot;tidy&amp;quot; function and call it

tidy_WTTC &amp;lt;- function(df) {
  
  start &amp;lt;- df[7, 2]
  end &amp;lt;- df[7, ncol(df)]
  
  df &amp;lt;- df[8:nrow(df), ]
  
  nms &amp;lt;- c(&amp;quot;country&amp;quot;, paste0(&amp;quot;y&amp;quot;, seq(start, end, 1)))
  
  names(df) &amp;lt;- nms
  
  df &amp;lt;- na.locf(df, fromLast = TRUE)
    
  df &amp;lt;- df[seq(1, nrow(df), 2), ]
  
  df.melt &amp;lt;- melt(df, id.vars = &amp;quot;country&amp;quot;, value.name=&amp;quot;value&amp;quot;, variable.name = &amp;quot;year&amp;quot;)
  
  df.melt$year &amp;lt;- as.numeric(gsub(&amp;quot;y&amp;quot;, &amp;quot;&amp;quot;, df.melt$year))
  
  df.melt$value &amp;lt;- as.numeric(df.melt$value)
  
  df.melt
}

tidy_dat &amp;lt;- tidy_WTTC(dat)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few notes about the above code.  To do anything with Plotly in R, it is necessary to use the &lt;strong&gt;plotly&lt;/strong&gt; R package, &lt;a href=&#34;https://github.com/ropensci/plotly&#34;&gt;which is available from rOpenSci&amp;rsquo;s repository on GitHub&lt;/a&gt;.  As such, it must be installed first using the &lt;strong&gt;devtools&lt;/strong&gt; package with the command &lt;code&gt;install_github(&amp;quot;ropensci/plotly&amp;quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d also like to explain the function in brief.  I&amp;rsquo;ve set it up to handle data downloads from the WTTC, provided that a) you&amp;rsquo;ve chosen a group of countries and one variable, and b) you&amp;rsquo;ve saved the Excel download as a CSV.  Given the structure of the WTTC data, the function will detect the years you&amp;rsquo;ve chosen for your download and re-format the data accordingly.  Next, I use the &lt;code&gt;na.locf&lt;/code&gt; function from the &lt;strong&gt;zoo&lt;/strong&gt; package to resolve the fact that country names are on one row in the original data file, with corresponding values on the next row; this fills in NAs with their correct values.  I then remove the unnecessary rows, and then reshape and reformat the data for visualization with &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The data are now ready for plotting with &lt;strong&gt;ggplot2&lt;/strong&gt;, and can then be converted to an interactive Plotly chart.  The code below shows how to get this done.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Create the ggplot, initialize the plotly object, and convert the ggplot to plotly

t1 &amp;lt;- ggplot(tidy_dat, aes(x = year, y = value, color = country)) + 
  geom_line(size = 2) + 
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) + 
  labs(list(x = &amp;quot;Year&amp;quot;, 
            y = &amp;quot;Total contribution of tourism to GDP (percent)&amp;quot;, 
            title = &amp;quot;Total contribution of tourism to GDP (percent), select Pacific Island countries.  Data source: WTTC&amp;quot;))

py &amp;lt;- plotly(&amp;quot;YOUR USERNAME HERE&amp;quot;, &amp;quot;YOUR API KEY HERE&amp;quot;)

py$ggplotly(t1)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;strong&gt;ggplot2&lt;/strong&gt; code is fairly straightforward; I&amp;rsquo;m making a basic line chart with minimal customization.  After creating the ggplot, the last two lines of code are all that are necessary to create an interactive chart with Plotly.  You will need to sign up for a Plotly account and get an API key to get this to work; fill in your own username and password where instructed to initialize the Plotly interface object, which I&amp;rsquo;ve called &lt;code&gt;py&lt;/code&gt;.  Finally, the &lt;code&gt;py$ggplotly(t1)&lt;/code&gt; command converts the ggplot &lt;code&gt;t1&lt;/code&gt; into an interactive chart, which should appear in your browser.  If everything has worked correctly, you&amp;rsquo;ll get a chart that looks like the one below:&lt;/p&gt;

&lt;p&gt;(If the iframe is not showing up properly, &lt;a href=&#34;http://plot.ly/~walkerke/52&#34;&gt;click here&lt;/a&gt; to access the chart)&lt;/p&gt;

&lt;hr /&gt;

&lt;div class = &#34;iframe container&#34;&gt;
&lt;iframe src=&#34;https://plot.ly/~walkerke/52&#34; id=&#34;igraph&#34; width=&#34;850&#34; height=&#34;600&#34; seamless scrolling=&#34;no&#34; frameBorder = &#34;0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;I now have an interactive chart that contains a wealth of information about the tourist economies of select Pacific Island countries.  As the chart reveals, the economic significance of tourism figures differently from country to country in the Pacific.  In places like Vanuatu and Fiji, tourism is a large component of the local economy and is projected to increase in importance.  In contrast, tourism is less prominent in places like Tonga, which relies heavily on remittances from Tongans living abroad; this example is familiar to my students, &lt;a href=&#34;http://www.star-telegram.com/2013/12/31/5453055/in-euless-tongans-usher-in-the.html&#34;&gt;as there is a large Tongan community living in cities very near to TCU&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By default, Plotly embeds several options for interacting with the chart.  The user can click and drag on the chart itself to zoom in to particular areas; with a time series chart, this can be useful if the user wants to highlight a particular period of time in the graph.  Additionally, tooltips appear on hover that give direct access to the data informing the chart.  More interactivity is also available from the icons in the upper-right-hand corner of the chart, allowing users to zoom, pan, and change the desired tooltip display (all data series, or one at a time).&lt;/p&gt;

&lt;p&gt;Once the chart is published to your Plotly account, you can customize it even further using Plotly&amp;rsquo;s web-based GUI.  In the above example, I moved the position of the legend manually using the GUI to maximize the space occupied by the data; you can also edit the chart&amp;rsquo;s appearance, change the axis and chart titles, and add notes to the chart, among other options.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;ggplotly&lt;/code&gt; in this way has become a major part of my workflow in preparing interactive materials for my teaching.  Here are a sampling of other charts I&amp;rsquo;ve prepared in this way:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://plot.ly/~walkerke/12&#34;&gt;Total fertility rates in South Asia by country, 1960-2011&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://plot.ly/~walkerke/21&#34;&gt;Past and future population of Japan (projected)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://plot.ly/~walkerke/30&#34;&gt;GDP by country since 1970, major world economies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More examples can be found at &lt;a href=&#34;https://plot.ly/~walkerke&#34;&gt;my Plotly page&lt;/a&gt;, and I&amp;rsquo;ll be posting the code for these visualizations to GitHub.  While &lt;code&gt;ggplotly&lt;/code&gt; has worked great for me so far, it is still very early in development and only supports a limited number of chart types from &lt;strong&gt;ggplot2&lt;/strong&gt; (&lt;a href=&#34;http://aarongonzales.net/plotly_examples.html&#34;&gt;see this post for details&lt;/a&gt;).  In turn, you&amp;rsquo;ll need to use Plotly&amp;rsquo;s APIs to create the unavailable chart types, which I have just started to work with.  This summer, I&amp;rsquo;m going to explore using Plotly as well using Python, &lt;a href=&#34;http://nbviewer.ipython.org/github/plotly/python-user-guide/blob/master/s00_homepage/s00_homepage.ipynb&#34;&gt;which has a well-developed API&lt;/a&gt; and appears to work very well with the IPython Notebook.&lt;/p&gt;

&lt;p&gt;As always, please contact me at &lt;a href=&#34;mailto:kyle.walker@tcu.edu&#34;&gt;kyle.walker@tcu.edu&lt;/a&gt; or get in touch with me on &lt;a href=&#34;https://twitter.com/kyle_e_walker&#34;&gt;Twitter&lt;/a&gt; if you have any questions or feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks to:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/plotlygraphs&#34;&gt;The Plotly team&lt;/a&gt; for their amazing work;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/WTTC&#34;&gt;The World Travel and Tourism Council&lt;/a&gt; for generously making their data publicly available.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>